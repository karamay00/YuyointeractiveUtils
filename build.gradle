buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "YuyointeractiveUtils"
        gdxVersion = '1.9.6'
        roboVMVersion = '2.3.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

project(":core") {
    apply plugin: "java"
    
apply plugin: "maven"

sourceCompatibility = 1.7
targetCompatibility = 1.7


    dependencies {
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile "com.esotericsoftware.spine:spine-libgdx:3.5.51.1"
        compile "com.github.tianqiujie:nativefont:2.5.0"
    }
}

task packJar(type: Jar) {
    doFirst {
        from files(project(":core").sourceSets.core.output.classesDir);
    }
}
def preCompile = [":core:coreClasses"];

packJar.dependsOn preCompile

task packDoc(dependsOn: ":core:javadoc", type: Jar) {
    classifier = "javadoc"
    from project(":core").tasks["javadoc"].destinationDir
}

task packSources(type: Jar) {
    classifier = "sources"
    doFirst {
        from files(project(":core").sourceSets.core.allJava)
    }
}

task packAll(dependsOn: ['packJar', 'packDoc', 'packSources'])

artifacts {
    archives packJar
    archives packDoc
    archives packSources
}